#TIMEHORIZON
T = 365 * 24; // number of hours in two years


#NODE DISTRIBUTION_EL
#PARAMETERS
    price_electricity = import "../../data/electricity_market_prices_2019.csv";
    price_electricity_export = import "../../data/electricity_market_prices_2019_export.csv";
    //price_electricity = 0.4;
    //maximale_last = import ""; //basiert auf solarer Einstrahlung (wenn Solare Einstrahlung hoch -> maximale Last gering (alle anderen speisen gerade auch ein)
#VARIABLES
    internal: operating_cost_electricity[T];
    external: electricity_import[T];
    internal: reward_export[T];
    external: electricity_export[T];
    internal: costs_import[T];


#CONSTRAINTS
    // electricity_export[t] <= maximale_last[t]
    
    electricity_export[t] >= 0;
    reward_export[t] == electricity_export[t] * price_electricity_export[t];
    costs_import[t] == electricity_import[t] * price_electricity[t];
    operating_cost_electricity[t] ==  costs_import[t] - reward_export[t];
    electricity_import[t] >= 0;
    //operating_cost_electricity[t] == price_electricity[t] * electricity_import[t];
    //operating_cost_electricity[t] == price_electricity * electricity_import[mod(t, 8760)]; 
    
    
#OBJECTIVES
    min: operating_cost_electricity[t];
    
//Hyperede beachten: 
//DISTRIBUTION_EL.electricity_import[t] AND 
//DISTRIBUTION_EL.electricity_export[t]